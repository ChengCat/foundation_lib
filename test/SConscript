import os.path

Import("env")


testlibsources = [

	'test/test.c'

	]


# ADD INTERNAL FLAGS

testlibenv = env.Clone()

testlibenv.Append( CPPPATH=['#/test'] )


# OUTPUTS

env['testlib'] = testlibenv.StaticLibrary( 'test', testlibsources )


# DEPENDENCIES


# INSTALLS

testlibenv.AddPostAction( 'test', testlibenv.Install( '#lib/${platform}${platformsuffix}/${buildprofile}', [ env['testlib'] ] ) )



testenv    = env.Clone()

testenv.Append( CPPPATH=['#/test'] )
testenv.Append( LIBPATH=['#/lib/${platform}${platformsuffix}/${buildprofile}'] )
testenv.Append( LIBS=[ 'test', 'foundation' ] )

if testenv['platform'] == 'linux':
	testenv.Append( LIBS=[ 'dl', 'rt', 'm' ] )
elif testenv['platform'] == 'raspberrypi':
	testenv.Append( LIBS=[ 'bcm_host', 'rt', 'm' ] )

env['alltest'] = testenv.Program( 'test-all${prgsuffix}', 'all/main.c' )
env['apptest'] = testenv.Program( 'test-app${prgsuffix}', 'app/main.c' )
env['arraytest'] = testenv.Program( 'test-array${prgsuffix}', 'array/main.c' )
env['atomictest'] = testenv.Program( 'test-atomic${prgsuffix}', 'atomic/main.c' )
env['base64test'] = testenv.Program( 'test-base64${prgsuffix}', 'base64/main.c' )
env['blowfishtest'] = testenv.Program( 'test-blowfish${prgsuffix}', 'blowfish/main.c' )
env['crashtest'] = testenv.Program( 'test-crash${prgsuffix}', 'crash/main.c' )
env['radixsorttest'] = testenv.Program( 'test-radixsort${prgsuffix}', 'radixsort/main.c' )
env['randomtest'] = testenv.Program( 'test-random${prgsuffix}', 'random/main.c' )
env['stringtest'] = testenv.Program( 'test-string${prgsuffix}', 'string/main.c' )


# INSTALLS

testenv.AddPostAction( 'test-all${prgsuffix}', testenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['alltest'] ] ) )
testenv.AddPostAction( 'test-app${prgsuffix}', testenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['apptest'] ] ) )
testenv.AddPostAction( 'test-array${prgsuffix}', testenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['arraytest'] ] ) )
testenv.AddPostAction( 'test-atomic${prgsuffix}', testenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['atomictest'] ] ) )
testenv.AddPostAction( 'test-base64${prgsuffix}', testenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['base64test'] ] ) )
testenv.AddPostAction( 'test-blowfish${prgsuffix}', testenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['blowfishtest'] ] ) )
testenv.AddPostAction( 'test-crash${prgsuffix}', testenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['crashtest'] ] ) )
testenv.AddPostAction( 'test-radixsort${prgsuffix}', testenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['radixsorttest'] ] ) )
testenv.AddPostAction( 'test-random${prgsuffix}', testenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['randomtest'] ] ) )
testenv.AddPostAction( 'test-string${prgsuffix}', testenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['stringtest'] ] ) )

