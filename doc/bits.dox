
/*!

\file bits.h
\brief Bit tricks and byte order utility functions
\details Bit tricks and byte order utility functions

\fn uint16_t byteorder_swap16( uint16_t arg )
\brief Swap byte order, 16 bit
\details Swap byte order, 16 bit
\param arg                         Value
\return                            Byte-order swapped value

\fn uint32_t byteorder_swap32( uint32_t arg )
\brief Swap byte order, 32 bit
\details Swap byte order, 32 bit
\param arg                         Value
\return                            Byte-order swapped value

\fn uint64_t byteorder_swap64( uint64_t arg )
\brief Swap byte order, 64 bit
\details Swap byte order, 64 bit
\param arg                         Value
\return                            Byte-order swapped value

\fn void byteorder_swap( void* RESTRICT buffer, const int size )
\brief Swap byte order, generic data
\details Swap byte order, generic data
\param buffer                      Pointer to value, swapped in-place
\param size                        Number of bytes in data

\fn uint16_t byteorder_bigendian16( uint16_t arg )
\brief Convert 16-bit native to big endian
\details Convert from 16-bit native byte order to big endian byte order (no-op for big endian systems)
\param arg                         Value
\return                            Big endian value

\fn uint32_t byteorder_bigendian32( uint32_t arg )
\brief Convert 32-bit native to big endian
\details Convert from 32-bit native byte order to big endian byte order (no-op for big endian systems)
\param arg                         Value
\return                            Big endian value

\fn uint64_t byteorder_bigendian64( uint64_t arg )
\brief Convert 64-bit native to big endian
\details Convert from 64-bit native byte order to big endian byte order (no-op for big endian systems)
\param arg                         Value
\return                            Big endian value

\fn void byteorder_bigendian( void* RESTRICT buffer, const int size )
\brief Convert generic data from native to big endian
\details Convert generic data from native byte order to big endian byte order (no-op for big endian systems)
\param buffer                      Pointer to value, converted in-place to big endian
\param size                        Number of bytes in data

\fn uint16_t byteorder_littleendian16( uint16_t arg )
\brief Convert from 16-bit native to little endian
\details Convert from 16-bit native byte order to little endian byte order (no-op for little endian systems)
\param arg                         Value
\return                            Little endian value

\fn uint32_t byteorder_littleendian32( uint32_t arg )
\brief Convert from 32-bit native to little endian
\details Convert from 32-bit native byte order to little endian byte order (no-op for little endian systems)
\param arg                         Value
\return                            Little endian value

\fn uint64_t byteorder_littleendian64( uint64_t arg )
\brief Convert from 64-bit native to little endian
\details Convert from 64-bit native byte order to little endian byte order (no-op for little endian systems)
\param arg                         Value
\return                            Little endian value

\fn void byteorder_littleendian( void* RESTRICT buffer, const int size )
\brief Convert generic data from native to little endian
\details Convert generic data from native byte order to little endian byte order (no-op for little endian systems)
\param buffer                      Pointer to value, converted in-place to little endian
\param size                        Number of bytes in data

*/
