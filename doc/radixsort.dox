
/*!

\file radixsort.h
\brief Radix sorter
\details Radix sorter for 32/64-bit integer and floating point values


\fn radixsort_t* radixsort_allocate( radixsort_data_t type, radixsort_index_t num )
\brief Allocate radix sorter
\details Allocate a radix sort object. All data is stored in a single continuous memory block,
including sort buckets and resulting index arrays.
\param type Data type
\param num Number of elements to sort
\return New radix sort object

\fn void radixsort_deallocate( radixsort_t* sort )
\brief Deallocate radix sorter
\details Deallocate a radix sort object.
\param sort Radix sort object to deallocate

\fn const radixsort_index_t* radixsort( radixsort_t* sort, const void* input, radixsort_index_t num )
\brief Radix sort
\details Perform radix sort. This will take advantage of temporal coherence if the input is partially sorted
and/or used in a previous sort call on this radix sort object.
\param sort Radix sort object
\param input Input data buffer of same type as radix sort object was initialized with
\param num  Number of elements to sort, must be less or equal to maximum number radix sort object was initialized with
\return Sorted index array holding num indices into the input array

*/
