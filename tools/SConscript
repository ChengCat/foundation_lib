import os.path

Import("env")


toolsenv    = env.Clone()

toolsenv.Append( CPPPATH=['#/tools'] )
toolsenv.Append( LIBPATH=['#/lib/${platform}${platformsuffix}/${buildprofile}'] )
toolsenv.Append( LIBS=[ 'foundation' ] )

if toolsenv['platform'] == 'linux':
	toolsenv.Append( LIBS=[ 'dl', 'rt', 'm' ] )
elif toolsenv['platform'] == 'raspberrypi':
	toolsenv.Append( LIBS=[ 'bcm_host', 'dl', 'rt', 'm' ] )
elif toolsenv['platform'] == 'win32' or toolsenv['platform'] == 'win64':
	toolsenv.Append( LIBS=[ 'user32', 'shell32', 'advapi32' ] )
	if toolsenv['CC'] == 'cl' or toolsenv['CC'] == 'icl':
		toolsenv.Append( LINKFLAGS=['/SUBSYSTEM:CONSOLE'])

env['bin2hexprg'] = toolsenv.Program( 'bin/bin2hex${prgsuffix}', 'bin2hex/main.c' )
env['hashifyprg'] = toolsenv.Program( 'bin/hashify${prgsuffix}', 'hashify/main.c' )
env['uuidgenprg'] = toolsenv.Program( 'bin/uuidgen${prgsuffix}', 'uuidgen/main.c' )


# INSTALLS

toolsenv.AddPostAction( 'bin/bin2hex${prgsuffix}', toolsenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['bin2hexprg'] ] ) )
toolsenv.AddPostAction( 'bin/hashify${prgsuffix}', toolsenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['hashifyprg'] ] ) )
toolsenv.AddPostAction( 'bin/uuidgen${prgsuffix}', toolsenv.Install( '#bin/${platform}${platformsuffix}/${buildprofile}', [ env['uuidgenprg'] ] ) )
